<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JUST A DROP IN THE OCEAN</title>
  
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://thomaskim.io/"/>
  <updated>2017-06-28T09:41:14.000Z</updated>
  <id>https://thomaskim.io/</id>
  
  <author>
    <name>Thomas Kim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Homebrew로 설치한 모든 package 일괄 삭제 방법</title>
    <link href="https://thomaskim.io/2017/06/27/uninstall-all-the-installed-packages-with-homebrew/"/>
    <id>https://thomaskim.io/2017/06/27/uninstall-all-the-installed-packages-with-homebrew/</id>
    <published>2017-06-27T07:44:38.000Z</published>
    <updated>2017-06-28T09:41:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Homebrew를 통해 package들을 설치하다 보면, package의 버전이 업데이트 되면서 같은 이름의 다른 버전을 가진 package들이 함께 설치되기도 하는데, 이 때 각각의 package들이 의존성을 가지는 외부 package들의 버전이 서로 다른 경우가 있다. 이런 상황에서 install / uninstall, link / unlink를 반복하다 보면 어느 순간 package들간의 link가 깨지는 문제가 발생하기도 한다 (실 사례는 아래에 부연 설명).<br>이러한 경우, 다양한 해결책이 있겠으나.. 가끔은 OS 재설치처럼 package들을 모두 삭제하고 다시 설치하고 싶은 욕구가 생길 때가 있다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew remove --force --ignore-dependencies $(brew list)</div></pre></td></tr></table></figure></p>
<p>터미널에서 위와 같이 입력하면 /usr/local/Cellar 에 설치된 모든 package들이 깔끔하게 지워진다.<br><a id="more"></a><br>(부연 설명)<br>px4 firmware 시뮬레이션을 위해 gazebo를 설치해야 할 필요가 있어, gazebo 홈페이지에 가보니 8.0 버전이 최신 버전이었다. 최신 버전의 gazebo를 설치하고, 기타 toolchain을 설치 후 px4를 빌드하니 gazebo library 쪽에서 에러가 발생하였다. 현재 px4가 gazebo 7.0 버전까지만 지원하는데에 따른 에러로, 해당 부분의 소스를 수정하여 빌드해볼까 생각하다가 결국에는 gazebo를 재설치 하는 쪽으로 결정하였다. 기존 설치된 package를 unlink하고 새롭게 설치를 하는데, 기존 설치된 버전의 gazebo와 의존성이 있는 다른 package들도 unlink가 필요했다. 그런데 이 의존성들이 px4 빌드를 위해 Homebrew로 설치한 다른 package들과도 연관되어 있다보니, gazebo를 7.0으로 재설치 한 후에도 또 다른 링크 에러들이 새롭게! 발생하게 되었다. 하나하나 링크 에러를 수정하느니.. 깨끗하게 package들을 지우고 다시 설치하는 편이 낫다고 판단되어 위의 방법으로 일괄 삭제하였다. 재 설치 후, gazebo와 px4는 문제없이 정상 작동하게 되었다는 이야기…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Homebrew를 통해 package들을 설치하다 보면, package의 버전이 업데이트 되면서 같은 이름의 다른 버전을 가진 package들이 함께 설치되기도 하는데, 이 때 각각의 package들이 의존성을 가지는 외부 package들의 버전이 서로 다른 경우가 있다. 이런 상황에서 install / uninstall, link / unlink를 반복하다 보면 어느 순간 package들간의 link가 깨지는 문제가 발생하기도 한다 (실 사례는 아래에 부연 설명).&lt;br&gt;이러한 경우, 다양한 해결책이 있겠으나.. 가끔은 OS 재설치처럼 package들을 모두 삭제하고 다시 설치하고 싶은 욕구가 생길 때가 있다.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew remove --force --ignore-dependencies $(brew list)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;터미널에서 위와 같이 입력하면 /usr/local/Cellar 에 설치된 모든 package들이 깔끔하게 지워진다.&lt;br&gt;
    
    </summary>
    
      <category term="Homebrew" scheme="https://thomaskim.io/categories/Homebrew/"/>
    
    
      <category term="Homebrew" scheme="https://thomaskim.io/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>블로그에 무료로 HTTPS 적용하기 (feat. CloudFlare)</title>
    <link href="https://thomaskim.io/2017/06/15/migrating-from-http-to-https-for-free/"/>
    <id>https://thomaskim.io/2017/06/15/migrating-from-http-to-https-for-free/</id>
    <published>2017-06-14T15:00:00.000Z</published>
    <updated>2017-06-28T09:41:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTTPS의 장점은 보안성의 강화를 포함하여 다양하지만, 블로거들에게는 검색 결과에서 상위에 노출될 확률을 높여준다는 것이 보다 매력적이다.</p>
<blockquote>
<p>HTTPS의 장점</p>
<ol>
<li>암호화, 데이터 무결성, 인증등을 통하여 보안이 강화된다</li>
<li>검색 결과에서 상위에 노출될 확률이 높아진다  <a href="https://www.google.com/events/io/io14videos/84d2d68d-a2bc-e311-b297-00155d5066d7" target="_blank" rel="external">(Google IO 2014)</a></li>
<li>HTTP/2가 지원되는 경우, HTTP보다 빠른 성능을 보여줄 수 있다</li>
</ol>
</blockquote>
<p>다만, HTTPS를 위해서는 SSL 인증서가 필요한데 인증서 발급에는 일반적으로 비용이 발생한다. 그렇다면 비용 부담없이 HTTPS를 사용할 수 있는 방법은 없을까?<br><a id="more"></a></p>
<p>먼저, GitHub Page를 그대로 사용하면 기본적으로 HTTPS를 지원하기 때문에 별도의 작업이 필요없다 (GitHub 만세!). 다음으로 본인이 직접 웹 서버를 운영하는 경우에는 <a href="https://letsencrypt.org/" target="_blank" rel="external">Let's Encrypt</a>와 같은 서비스를 이용하여 무료로 인증서를 발급받아 웹 서버에 적용하는 방법이 있다 (Let’s Encrypt 만세!).<br>아쉽게도 필자는 gandi.net에서 구입한 도메인을 GitHub에 연결하여 사용하고 있는데, 추가 비용을 지불하지 않은 상태에서는 HTTPS가 지원되지 않는다. 이처럼 외부 도메인을 사용하는 경우에는 일단 기본적으로 HTTP만을 지원하고, 이를 HTTPS로 전환하기 위해서는 추가 비용의 부담이 발생하는 경우가 대부분이다. 따라서, 필자와 같이 GitHub Page에 외부 도메인을 묶어 사용하는 경우에는 CloudFlare와 같은 서비스를 잘! 활용하여 HTTPS를 무료로 적용하는 방법을 고려해보자.</p>
<blockquote><p>Cloudflare는 CDN 서비스와 분산 네임서버를 이용하여 사이트 성능과 속도, 보안을 향상시키는 서비스를 제공하는 기업이다.</p>
<footer><strong>위키 백과</strong><cite><a href="https://ko.wikipedia.org/wiki/Cloudflare" target="_blank" rel="external">CloudFlare</a></cite></footer></blockquote>
<p>본 포스팅에서는 CloudFlare의 무료 HTTPS 서비스를 활용하여 GitHub에 연결된 gandi.net의 도메인에 HTTPS를 적용하는 방법에 대해 설명한다.</p>
<h4 id="Step-1-GitHub에-gandi-net의-도메인을-연결하기"><a href="#Step-1-GitHub에-gandi-net의-도메인을-연결하기" class="headerlink" title="Step 1: GitHub에 gandi.net의 도메인을 연결하기"></a>Step 1: GitHub에 gandi.net의 도메인을 연결하기</h4><ul>
<li><a href="/2017/06/13/using-custom-domain-to-github/" title="GitHub 페이지에 외부 도메인(gandi.net) 연결하기">GitHub 페이지에 외부 도메인(gandi.net) 연결하기</a>
</li>
</ul>
<h4 id="Step-2-CloudFlare에서-도메인-설정"><a href="#Step-2-CloudFlare에서-도메인-설정" class="headerlink" title="Step 2: CloudFlare에서 도메인 설정"></a>Step 2: CloudFlare에서 도메인 설정</h4><ul>
<li><p>CloudFlare에 가입 후, 로그인을 하면 website를 추가하기 위한 화면이 표시된다. HTTPS를 적용하기 위한 도메인을 입력한 뒤, Begin Scan을 클릭한다.</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061501.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061501.PNG" alt=""></a></div>
</li>
<li><p>Scan 과정이 잠시 진행되고 난 후</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061502.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061502.PNG" alt=""></a></div>
</li>
<li><p>A type 항목에 GitHub DNS 서버 IP들(192.30.252.153, 192.30.252.154)을 입력하고, CNAME type 항목에 도메인 명을 입력한다</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061503.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061503.PNG" alt=""></a></div>
<div class="figure " style="width:;"><a class="fancybox" href="2017061504.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061504.PNG" alt=""></a></div>
</li>
<li><p>최종적으로 Record들을 확인하고, Continue를 클릭하여 다음으로 진행</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061505.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061505.PNG" alt=""></a></div>
</li>
<li><p>Free Website를 선택하고 Continue를 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061506.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061506.PNG" alt=""></a></div>
</li>
<li><p>Nameserver 목록이 변경됨을 확인하고 Continue를 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061507.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061507.PNG" alt=""></a></div>
</li>
<li><p>gandi.net에 변경된 nameserver가 반영되어 정상 동작할 때까지는 “Website not active” 상태로 표시된다. 이제 gandi.net에 설정되어 있는 nameserver를 변경한다.</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061508.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061508.PNG" alt=""></a></div>
</li>
</ul>
<h4 id="Step-3-gandi-net-nameserver-변경"><a href="#Step-3-gandi-net-nameserver-변경" class="headerlink" title="Step 3: gandi.net nameserver 변경"></a>Step 3: gandi.net nameserver 변경</h4><ul>
<li><p>gandi.net의 My account 메뉴에서 도메인 이름을 클릭하면 우측 하단에 “Name servers” 정보 표시가 보인다. Modify servers 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061509.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061509.PNG" alt=""></a></div>
</li>
<li><p>기존 내용들을 지우고 CloudFlare에서 알려준 nameserver를 입력한 뒤, Submit 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061510.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061510.PNG" alt=""></a></div>
</li>
<li><p>변경된 내용이 반영되기까지는 일정 시간이 소요되며, DNS가 정상 동작을 하게되면 CloudFlare의 Overview 화면에서 “Active” 상태가 표시된다</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061511.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061511.PNG" alt=""></a></div>
</li>
</ul>
<h4 id="Step-4-CloudFlare-추가-설정"><a href="#Step-4-CloudFlare-추가-설정" class="headerlink" title="Step 4: CloudFlare 추가 설정"></a>Step 4: CloudFlare 추가 설정</h4><ul>
<li><p>Speed 메뉴의 Auto Minify 항목에서 모든 세부 항목에 체크 표시</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061512.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061512.PNG" alt=""></a></div>
</li>
<li><p>Caching 메뉴의 Browser Cache Expiration 항목에서 값을 1 month로 변경</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061513.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061513.PNG" alt=""></a></div>
</li>
<li><p>Page Rules 메뉴에서 Create Page Rule을 클릭하여 rule을 추가한다.</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061514.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061514.PNG" alt=""></a></div>
</li>
<li><p>먼저, www.yourdomain.com으로 들어오는 모든 요청이 yourdomain.com으로 리다이렉션 되도록 rule을 추가</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061515.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061515.PNG" alt=""></a></div>
</li>
<li><p>다음으로 www.yourdomain.com으로 들어오는 모든 요청이 HTTPS로 리다이렉션 되도록 rule을 추가한다. nameserver 변경이 완료되지 않은 경우(Overview 화면에서 “Website not active” 상태)에는 옵션 선택 창에 “Always Use HTTPS” 항목이 보이지 않으므로 주의</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061516.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061516.PNG" alt=""></a></div>
</li>
<li><p>Crypto 메뉴의 SSL 항목은 “Full”이 default로 선택되어 있다. “Full”을 다시 한번 클릭하면 현재 상태가 표시되므로 클릭하여 “Active Certificate” 상태인지 확인</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061519.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061519.PNG" alt=""></a></div>
</li>
<li><p>Crypto 메뉴의 HSTS 항목을 Enable 상태로 변경</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061520.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061520.PNG" alt=""></a></div>
<p>세부 항목은 모두 On 상태로 체크</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061521.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061521.PNG" alt=""></a></div>
</li>
</ul>
<h2 id="이-사이트는-안전함"><a href="#이-사이트는-안전함" class="headerlink" title="이 사이트는 안전함!!!"></a>이 사이트는 안전함!!!</h2><div class="figure " style="width:;"><img class="fig-img" src="2017061522.PNG" alt=""></div>
<p>브라우저에 안전함 표시가 보인다 :)<br>아직 HTTP로 운영중인 개인 블로그들은 HTTPS로의 전환을 진지하게 고려해 볼 시점이 아닌가 싶다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTPS의 장점은 보안성의 강화를 포함하여 다양하지만, 블로거들에게는 검색 결과에서 상위에 노출될 확률을 높여준다는 것이 보다 매력적이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HTTPS의 장점&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;암호화, 데이터 무결성, 인증등을 통하여 보안이 강화된다&lt;/li&gt;
&lt;li&gt;검색 결과에서 상위에 노출될 확률이 높아진다  &lt;a href=&quot;https://www.google.com/events/io/io14videos/84d2d68d-a2bc-e311-b297-00155d5066d7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;(Google IO 2014)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTTP/2가 지원되는 경우, HTTP보다 빠른 성능을 보여줄 수 있다&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;다만, HTTPS를 위해서는 SSL 인증서가 필요한데 인증서 발급에는 일반적으로 비용이 발생한다. 그렇다면 비용 부담없이 HTTPS를 사용할 수 있는 방법은 없을까?&lt;br&gt;
    
    </summary>
    
      <category term="GitHub" scheme="https://thomaskim.io/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="https://thomaskim.io/tags/GitHub/"/>
    
      <category term="gandi.net" scheme="https://thomaskim.io/tags/gandi-net/"/>
    
      <category term="CloudFlare" scheme="https://thomaskim.io/tags/CloudFlare/"/>
    
      <category term="HTTPS" scheme="https://thomaskim.io/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 페이지에 외부 도메인(gandi.net) 연결하기</title>
    <link href="https://thomaskim.io/2017/06/13/using-custom-domain-to-github/"/>
    <id>https://thomaskim.io/2017/06/13/using-custom-domain-to-github/</id>
    <published>2017-06-13T06:47:19.000Z</published>
    <updated>2017-06-28T09:41:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>Github Pages를 이용하여 개인 홈페이지를 작성하면 thoskim.github.io와 같은 GitHub의 서브 도메인을 통해 각자의 홈페이지에 접근이 가능하다. 만약, 외부 도메인 호스팅 업체에 등록된 자신만의 도메인이 있다면, 해당 도메인을 Github의 홈페이지에 연결하여 접속하게 할 수 있다.<br>자신의 도메인을 사용하여 Github 홈페이지에 접근하여 보자.<br><a id="more"></a></p>
<p>본 포스팅에서는 gandi.net의 도메인을 GitHub Page에 연결하는 절차에 대해 설명한다.</p>
<h4 id="Step-1-gandi-net의-Zone-설정-창으로-들어가기"><a href="#Step-1-gandi-net의-Zone-설정-창으로-들어가기" class="headerlink" title="Step 1: gandi.net의 Zone 설정 창으로 들어가기"></a>Step 1: gandi.net의 Zone 설정 창으로 들어가기</h4><ul>
<li><p>gandi.net에 로그인하여 My account 메뉴를 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061301.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061301.PNG" alt=""></a></div>
</li>
<li><p>본인이 소유한 도메인 목록에서 GitHub과 연결하려는 도메인 이름을 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061302.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061302.PNG" alt=""></a></div>
</li>
<li><p>우측 하단의 Zone files 영역에서 Edit the zone 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061305.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061305.PNG" alt=""></a></div>
</li>
<li><p>만약 이 전에 Zone version을 추가한 적이 없으면, 아래와 같이 Copy to edit을 선택하여 복사본을 생성한 후에 Edit the zone을 선택할 수 있다</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061304.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061304.PNG" alt=""></a></div>
</li>
</ul>
<h4 id="Step-2-Github과-연동하기-위한-Zone-설정"><a href="#Step-2-Github과-연동하기-위한-Zone-설정" class="headerlink" title="Step 2: Github과 연동하기 위한 Zone 설정"></a>Step 2: Github과 연동하기 위한 Zone 설정</h4><ul>
<li><p>초록색으로 체크된 버전은 현재 사용중인 버전이므로, Create a new version을 클릭하여 작업을 위한 새로운 버전을 생성</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061306.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061306.PNG" alt=""></a></div>
</li>
<li><p>자동으로 생성된 항목들은 모두 삭제 (x버튼을 클릭하여 각각 삭제)</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061307.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061307.PNG" alt=""></a></div>
</li>
<li><p>모든 항목이 삭제된 상태에서 Add를 클릭하여 GitHub과의 연동 설정</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061308.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061308.PNG" alt=""></a></div>
</li>
<li><p>A Type의 항목을 아래와 같이 설정하고 Submit (192.30.252.153, 192.30.252.154는 GitHub의 DNS Provider IP)</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061309.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061309.PNG" alt=""></a></div>
</li>
<li><p>A Type의 항목을 하나 더 추가하여 아래와 같이 설정하고 Submit</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061310.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061310.PNG" alt=""></a></div>
</li>
<li><p>CNAME Type의 항목을 아래와 같이 설정하고 Submit (Value에는 자신의 GitHub 홈페이지 주소를 입력)</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061311.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061311.PNG" alt=""></a></div>
</li>
<li><p>세 가지 항목이 정확히 추가되었는지 확인하고, 현재 작업한 version이 적용되도록 Use this version 클릭</p>
<div class="figure " style="width:;"><a class="fancybox" href="2017061312.PNG" title="" data-fancybox-group=""><img class="fig-img" src="2017061312.PNG" alt=""></a></div>
</li>
</ul>
<h4 id="Step-3-DNS-refresh-완료까지-대기"><a href="#Step-3-DNS-refresh-완료까지-대기" class="headerlink" title="Step 3: DNS refresh 완료까지 대기"></a>Step 3: DNS refresh 완료까지 대기</h4><ul>
<li>자신의 도메인을 통해 Github의 홈페이지에 접근 가능한지 확인한다. 작업이 반영되기까지는 반나절에서 하루까지 걸릴 수도 있다.</li>
</ul>
<h2 id="이제-길고-복잡한-GitHub-주소-대신-외부-도메인을-통해-깔끔하게-GitHub에-접속할-수-있게-되었으니…"><a href="#이제-길고-복잡한-GitHub-주소-대신-외부-도메인을-통해-깔끔하게-GitHub에-접속할-수-있게-되었으니…" class="headerlink" title="이제 길고 복잡한 GitHub 주소 대신 외부 도메인을 통해 깔끔하게 GitHub에 접속할 수 있게 되었으니…"></a>이제 길고 복잡한 GitHub 주소 대신 외부 도메인을 통해 깔끔하게 GitHub에 접속할 수 있게 되었으니…</h2><p>GitHub에서 다양한 프로젝트들을 공유할 수 있도록 내용을 알차게 채우는 일이 남았다 :)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github Pages를 이용하여 개인 홈페이지를 작성하면 thoskim.github.io와 같은 GitHub의 서브 도메인을 통해 각자의 홈페이지에 접근이 가능하다. 만약, 외부 도메인 호스팅 업체에 등록된 자신만의 도메인이 있다면, 해당 도메인을 Github의 홈페이지에 연결하여 접속하게 할 수 있다.&lt;br&gt;자신의 도메인을 사용하여 Github 홈페이지에 접근하여 보자.&lt;br&gt;
    
    </summary>
    
      <category term="GitHub" scheme="https://thomaskim.io/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="https://thomaskim.io/tags/GitHub/"/>
    
      <category term="gandi.net" scheme="https://thomaskim.io/tags/gandi-net/"/>
    
  </entry>
  
  <entry>
    <title>Building Nuttx</title>
    <link href="https://thomaskim.io/2016/07/27/building-nuttx/"/>
    <id>https://thomaskim.io/2016/07/27/building-nuttx/</id>
    <published>2016-07-26T15:00:00.000Z</published>
    <updated>2017-06-28T09:36:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><ul>
<li><h3 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h3><ul>
<li>Ubuntu 14.04 (gcc 4.8.3) </li>
<li>using vagrant box: ubuntu/trusty64</li>
</ul>
</li>
<li><h3 id="Target-Board"><a href="#Target-Board" class="headerlink" title="Target Board"></a>Target Board</h3><ul>
<li>LM3S6965-EK</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><h3 id="0-prepare-tools"><a href="#0-prepare-tools" class="headerlink" title="0. prepare tools"></a>0. prepare tools</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install git subversion</div></pre></td></tr></table></figure>
<h3 id="1-download-nuttx-packages"><a href="#1-download-nuttx-packages" class="headerlink" title="1. download nuttx packages"></a>1. download nuttx packages</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line">mkdir nuttx</div><div class="line">cd ~/nuttx</div><div class="line">git clone https://bitbucket.org/nuttx/nuttx.git nuttx</div><div class="line">git clone https://bitbucket.org/nuttx/apps.git apps</div><div class="line">git clone https://bitbucket.org/nuttx/tools.git tools</div><div class="line">git clone https://bitbucket.org/nuttx/buildroot.git buildroot</div></pre></td></tr></table></figure>
<h3 id="2-build-and-install-the-kconfig-frontends-package"><a href="#2-build-and-install-the-kconfig-frontends-package" class="headerlink" title="2. build and install the kconfig-frontends package"></a>2. build and install the kconfig-frontends package</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd ~/nuttx/tools/kconfig-frontends</div><div class="line">sudo apt-get install gperf libncurses5-dev</div><div class="line">./configure --enable-mconf --disable-gconf --disable-qconf</div><div class="line">make</div><div class="line">sudo make install</div><div class="line">(reference: tools/README.txt)</div></pre></td></tr></table></figure>
<h3 id="3-build-the-buildroot-package"><a href="#3-build-the-buildroot-package" class="headerlink" title="3. build the buildroot package"></a>3. build the buildroot package</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd ~/nuttx/buildroot</div><div class="line">sudo apt-get install libgmp-dev libgmp3-dev libmpfr-dev libmpc-dev</div><div class="line">cp configs/cortexm3-eabi-defconfig-4.8.2 .config</div><div class="line">make menuconfig (modify build path: ../../nuttx -&gt; ../nuttx)</div><div class="line">make oldconfig </div><div class="line">make</div><div class="line">(reference: buildroot/README.txt)</div></pre></td></tr></table></figure>
<h3 id="4-configure-the-nuttx"><a href="#4-configure-the-nuttx" class="headerlink" title="4. configure the nuttx"></a>4. configure the nuttx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd ~/nuttx/nuttx/tools</div><div class="line">./configure.sh lm3s6965-ek/nsh</div><div class="line">cd ..</div><div class="line">make menuconfig</div><div class="line">. ./setenv.sh</div><div class="line">(reference: nuttx/README.txt)</div></pre></td></tr></table></figure>
<h3 id="5-build-the-nuttx"><a href="#5-build-the-nuttx" class="headerlink" title="5. build the nuttx"></a>5. build the nuttx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Environment&quot;&gt;&lt;a href=&quot;#Environment&quot; class=&quot;headerlink&quot; title=&quot;Environment&quot;&gt;&lt;/a&gt;Environment&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;OS&quot;&gt;&lt;a href=&quot;#OS&quot; class=&quot;headerlink&quot; title=&quot;OS&quot;&gt;&lt;/a&gt;OS&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Ubuntu 14.04 (gcc 4.8.3) &lt;/li&gt;
&lt;li&gt;using vagrant box: ubuntu/trusty64&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;Target-Board&quot;&gt;&lt;a href=&quot;#Target-Board&quot; class=&quot;headerlink&quot; title=&quot;Target Board&quot;&gt;&lt;/a&gt;Target Board&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;LM3S6965-EK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="nuttx" scheme="https://thomaskim.io/categories/nuttx/"/>
    
    
      <category term="nuttx" scheme="https://thomaskim.io/tags/nuttx/"/>
    
      <category term="build" scheme="https://thomaskim.io/tags/build/"/>
    
  </entry>
  
</feed>
